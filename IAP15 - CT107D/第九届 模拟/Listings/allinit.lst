C51 COMPILER V9.00   ALLINIT                                                               03/29/2018 22:40:00 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ALLINIT
OBJECT MODULE PLACED IN .\Objects\allinit.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE sour\allinit.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\allinit.lst) TABS(2) OBJECT(.\Objects\allinit.obj)

line level    source

   1          #include"includes.h"
   2          
   3          
   4          void allinit()
   5          {
   6   1        P2=(P2&0x1f)|0x80;
   7   1        P0=0xff;
   8   1        P2&=0x1f;
   9   1      
  10   1        P2=(P2&0x1f)|0xA0;
  11   1        P04=0;
  12   1        P06=0;
  13   1        P2&=0x1f;
  14   1      
  15   1        P2=(P2&0x1f)|0xc0;
  16   1        P0=0xff;
  17   1        P2&=0x1f;
  18   1        P2=(P2&0x1f)|0xe0;
  19   1        P0=0xFF;
  20   1        P2&=0x1f;
  21   1      }
  22          /*===============================================
  23           指示部分
  24          ===================================================*/
  25          //void RELAY(bit i)  //1 开
  26          //{
  27          //  if(i)
  28          //  {
  29          //    P2 = (P2&0x1f)|0xA0;
  30          //    P0 = 0x10;
  31          //    P2 &=0x1f;
  32          //  }
  33          //  else
  34          //  {
  35          //    P2 = (P2&0x1f)|0xA0;
  36          //    P0 = 0x00;
  37          //    P2 &=0x1f;
  38          //  }
  39          //}
  40          
  41          //void BUZZ(bit i)  //1 开
  42          //{
  43          //  if(i)
  44          //  {
  45          //    P2 = (P2&0x1f)|0xA0;
  46          //    P0 = 0x40;
  47          //    P2 &=0x1f;
  48          //  }
  49          //  else
  50          //  {
  51          //    P2 = (P2&0x1f)|0xA0;
  52          //    P0 = 0x00;
  53          //    P2 &=0x1f;
  54          //  }
C51 COMPILER V9.00   ALLINIT                                                               03/29/2018 22:40:00 PAGE 2   

  55          //}
  56          
  57          //void LED1(bit i)  //1 开
  58          //{
  59          //  if(i)
  60          //  {
  61          //    P2 = (P2&0x1f)|0x80;
  62          //    P0 = 0xfe;
  63          //    P2 &=0x1f;
  64          //  }
  65          //  else
  66          //  {
  67          //    P2 = (P2&0x1f)|0x80;
  68          //    P0 = 0xff;
  69          //    P2 &=0x1f;
  70          //  }
  71          //}
  72          
  73          //void LED2(bit i)  //1 开
  74          //{
  75          //  if(i)
  76          //  {
  77          //    P2 = (P2&0x1f)|0x80;
  78          //    P0 = 0xfd;
  79          //    P2 &=0x1f;
  80          //  }
  81          //  else
  82          //  {
  83          //    P2 = (P2&0x1f)|0x80;
  84          //    P0 = 0xff;
  85          //    P2 &=0x1f;
  86          //  }
  87          //}
  88          //void LED3(bit i)  //1 开
  89          //{
  90          //  if(i)
  91          //  {
  92          //    P2 = (P2&0x1f)|0x80;
  93          //    P0 = 0xfb;
  94          //    P2 &=0x1f;
  95          //  }
  96          //  else
  97          //  {
  98          //    P2 = (P2&0x1f)|0x80;
  99          //    P0 = 0xff;
 100          //    P2 &=0x1f;
 101          //  }
 102          //}
 103          //void LED4(bit i)  //1 开
 104          //{
 105          //  if(i)
 106          //  {
 107          //    P2 = (P2&0x1f)|0x80;
 108          //    P0 = 0xf7;
 109          //    P2 &=0x1f;
 110          //  }
 111          //  else
 112          //  {
 113          //    P2 = (P2&0x1f)|0x80;
 114          //    P0 = 0xff;
 115          //    P2 &=0x1f;
 116          //  }
C51 COMPILER V9.00   ALLINIT                                                               03/29/2018 22:40:00 PAGE 3   

 117          //}
 118          void LED7(bit i)  //1 开
 119          {
 120   1        if(i)
 121   1        {
 122   2          P2 = (P2&0x1f)|0x80;
 123   2          P0 = 0x7f;
 124   2          P2 &=0x1f;
 125   2        }
 126   1        else
 127   1        {
 128   2          P2 = (P2&0x1f)|0x80;
 129   2          P0 = 0xff;
 130   2          P2 &=0x1f;
 131   2        }
 132   1      }
 133          void LED8(bit i)  //1 开
 134          {
 135   1        if(i)
 136   1        {
 137   2          P2 = (P2&0x1f)|0x80;
 138   2          P0 = 0xbf;
 139   2          P2 &=0x1f;
 140   2        }
 141   1        else
 142   1        {
 143   2          P2 = (P2&0x1f)|0x80;
 144   2          P0 = 0xff;
 145   2          P2 &=0x1f;
 146   2        }
 147   1      }
 148          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    108    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
